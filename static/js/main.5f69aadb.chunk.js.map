{"version":3,"sources":["components/Profile/Profile.module.css","components/FriendList/FriendList.module.css","components/Statistics/Statistics.module.css","components/TransactionHistory/TransactionHistory.module.css","components/Profile/Profile.js","components/Statistics/Statistics.js","components/FriendList/FriendList.js","components/TransactionHistory/TransactionHistory.js","components/App/App.js","index.js"],"names":["module","exports","Profile","user","className","styles","profile","src","avatar","alt","name","tag","location","stats","label","quantity","followers","views","likes","Statistics","title","statistics","stat_list","map","stat","key","id","item","style","backgroundColor","Math","floor","random","toString","percentage","defaultProps","FriendList","friends","friend_list","friend","isOnline","status","statusOffline","width","TransactionHistory","items","transaction_history","table_head","table_body","type","amount","currency","App","statisticalData","friendsData","transactions","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5f69aadb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"font-stack\":\"'Lato', sans-serif\",\"profile\":\"Profile_profile__2ZkWt\",\"avatar\":\"Profile_avatar__bR464\",\"name\":\"Profile_name__2rhOP\",\"tag\":\"Profile_tag__3z1FF\",\"location\":\"Profile_location__1aTw1\",\"stats\":\"Profile_stats__7kh76\",\"label\":\"Profile_label__im87r\",\"quantity\":\"Profile_quantity__2g5Tl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"font-stack\":\"'Lato', sans-serif\",\"friend_list\":\"FriendList_friend_list__1JzBW\",\"item\":\"FriendList_item__28qVK\",\"avatar\":\"FriendList_avatar__1LjDH\",\"status\":\"FriendList_status__1j5lK\",\"statusOffline\":\"FriendList_statusOffline__1VnLM FriendList_status__1j5lK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"font-stack\":\"'Lato', sans-serif\",\"statistics\":\"Statistics_statistics__3ycUX\",\"title\":\"Statistics_title__34i0z\",\"stat_list\":\"Statistics_stat_list__1CXNb\",\"item\":\"Statistics_item__xB97Y\",\"label\":\"Statistics_label__38Sa0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transaction_history\":\"TransactionHistory_transaction_history__1l6Zn\",\"table_head\":\"TransactionHistory_table_head__3VbY8\",\"table_body\":\"TransactionHistory_table_body__2eZb9\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Profile.module.css';\n\nconst Profile = ({ user }) => (\n  <div className={styles.profile}>\n    <div className=\"description\">\n      <img src={user.avatar} alt=\"user avatar\" className={styles.avatar} />\n      <p className={styles.name}>{user.name}</p>\n      <p className={styles.tag}>@{user.tag}</p>\n      <p className={styles.location}>{user.location}</p>\n    </div>\n\n    <ul className={styles.stats}>\n      <li>\n        <span className={styles.label}>Followers</span>\n        <span className={styles.quantity}>{user.stats.followers}</span>\n      </li>\n      <li>\n        <span className={styles.label}>Views</span>\n        <span className={styles.quantity}>{user.stats.views}</span>\n      </li>\n      <li>\n        <span className={styles.label}>Likes</span>\n        <span className={styles.quantity}>{user.stats.likes}</span>\n      </li>\n    </ul>\n  </div>\n);\n\nProfile.propTypes = {\n  user: PropTypes.shape({\n    avatar: PropTypes.string,\n    name: PropTypes.string.isRequired,\n    tag: PropTypes.string.isRequired,\n    location: PropTypes.string.isRequired,\n    stats: PropTypes.shape({\n      followers: PropTypes.number.isRequired,\n      views: PropTypes.number.isRequired,\n      likes: PropTypes.number.isRequired,\n    }),\n  }).isRequired,\n};\n\nexport default Profile;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Statistics.module.css';\n\nfunction generateColor() {\n  return `#${Math.floor(Math.random() * 16777215).toString(16)}`;\n}\n\nconst Statistics = ({ title, stats }) => (\n  <section className={styles.statistics}>\n    {title && <h2 className={styles.title}>{title}</h2>}\n\n    <ul className={styles.stat_list}>\n      {stats.map(stat => (\n        <li\n          key={stat.id}\n          className={styles.item}\n          style={{ backgroundColor: generateColor() }}\n        >\n          <span className=\"label\">{stat.label}</span>\n          <span className=\"percentage\">{stat.percentage}%</span>\n        </li>\n      ))}\n    </ul>\n  </section>\n);\n\nStatistics.defaultProps = {\n  title: '',\n};\n\nStatistics.propTypes = {\n  title: PropTypes.string,\n  stats: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n      percentage: PropTypes.number.isRequired,\n    }),\n  ).isRequired,\n};\nexport default Statistics;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './FriendList.module.css';\n\nconst FriendList = ({ friends }) => (\n  <ul className={styles.friend_list}>\n    {friends.map(friend => (\n      <li key={friend.id} className={styles.item}>\n        <span\n          className={friend.isOnline ? styles.status : styles.statusOffline}\n        />\n        <img\n          className={styles.avatar}\n          src={friend.avatar}\n          alt=\"avatar\"\n          width=\"48\"\n        />\n        <p className=\"name\">{friend.name}</p>\n      </li>\n    ))}\n  </ul>\n);\n\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      isOnline: PropTypes.bool.isRequired,\n      avatar: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n\nexport default FriendList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './TransactionHistory.module.css';\n\nconst TransactionHistory = ({ items }) => (\n  <table className={styles.transaction_history}>\n    <thead className={styles.table_head}>\n      <tr>\n        <th>Type</th>\n        <th>Amount</th>\n        <th>Currency</th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {items.map(item => (\n        <tr className={styles.table_body} key={item.id}>\n          <td>{item.type}</td>\n          <td>{item.amount}</td>\n          <td>{item.currency}</td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n\nTransactionHistory.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      type: PropTypes.string,\n      amount: PropTypes.string,\n      currency: PropTypes.string,\n    }).isRequired,\n  ).isRequired,\n};\n\nexport default TransactionHistory;\n","import React from 'react';\n\nimport user from '../../db/user.json';\nimport statisticalData from '../../db/statistical-data.json';\nimport friendsData from '../../db/friends.json';\nimport transactions from '../../db/transactions.json';\n\nimport Profile from '../Profile';\nimport Statistics from '../Statistics';\nimport FriendList from '../FriendList';\nimport TransactionHistory from '../TransactionHistory';\n\nconst App = () => (\n  <>\n    <Profile user={user} />\n    <Statistics title=\"File upload\" stats={statisticalData} />\n    <FriendList friends={friendsData} />\n    <TransactionHistory items={transactions} />\n  </>\n);\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport React from 'react';\nimport 'normalize.css';\n\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}